#include <stdio.h>
#include <locale.h>
#include <wchar.h>
#include <string>
#include <windows.h>
#include <map>
#include <deque>
#include <vector>

#define index_eng_first 97
#define index_eng_last 122
#define eng_upper_index_offset 32
#define eng_len 26
#define index_blank 32
#define index_rus_first 1072
#define index_rus_last 1103
#define rus_upper_index_offset 32
#define rus_len 32

#define fname_buff_size 256
#define word_len 50
#define data_rate_dir_name "data_rate"
#define data_rate_SORTED_dir_name "data_rate_SORTED"
#define raw_texts_dir_name "raw_texts"
#define plain_texts_dir_name "plain_texts"
#define entropy_out_dir_name "entropy_out"
using namespace std;

const map<unsigned int, wchar_t> rus_lang_encoding = {
	{1040, L'À'},
	{1041, L'Á'},
	{1042, L'Â'},
	{1043, L'Ã'},
	{1044, L'Ä'},
	{1045, L'Å'},
	{1025, L'¨'},
	{1046, L'Æ'},
	{1047, L'Ç'},
	{1048, L'È'},
	{1049, L'É'},
	{1050, L'Ê'},
	{1051, L'Ë'},
	{1052, L'Ì'},
	{1053, L'Í'},
	{1054, L'Î'},
	{1055, L'Ï'},
	{1056, L'Ð'},
	{1057, L'Ñ'},
	{1058, L'Ò'},
	{1059, L'Ó'},
	{1060, L'Ô'},
	{1061, L'Õ'},
	{1062, L'Ö'},
	{1063, L'×'},
	{1064, L'Ø'},
	{1065, L'Ù'},
	{1066, L'Ü'},
	{1067, L'Ú'},
	{1068, L'Û'},
	{1069, L'Ý'},
	{1070, L'Þ'},
	{1071, L'ß'},
	{32, L' '},
	{1072, L'à'},
	{1073, L'á'},
	{1074, L'â'},
	{1075, L'ã'},
	{1076, L'ä'},
	{1077, L'å'},
	{1105, L'¸'},
	{1078, L'æ'},
	{1079, L'ç'},
	{1080, L'è'},
	{1081, L'é'},
	{1082, L'ê'},
	{1083, L'ë'},
	{1084, L'ì'},
	{1085, L'í'},
	{1086, L'î'},
	{1087, L'ï'},
	{1088, L'ð'},
	{1089, L'ñ'},
	{1090, L'ò'},
	{1091, L'ó'},
	{1092, L'ô'},
	{1093, L'õ'},
	{1094, L'ö'},
	{1095, L'÷'},
	{1096, L'ø'},
	{1097, L'ù'},
	{1098, L'ü'},
	{1099, L'ú'},
	{1100, L'û'},
	{1101, L'ý'},
	{1102, L'þ'},
	{1103, L'ÿ'}
};
const map<unsigned int, unsigned int> rus_lang_mask = {
	{1040, 1040},
	{1041, 1041},
	{1042, 1042},
	{1043, 1043},
	{1044, 1044},
	{1045, 1045},
	{1025, 1045},
	{1046, 1046},
	{1047, 1047},
	{1048, 1048},
	{1049, 1049},
	{1050, 1050},
	{1051, 1051},
	{1052, 1052},
	{1053, 1053},
	{1054, 1054},
	{1055, 1055},
	{1056, 1056},
	{1057, 1057},
	{1058, 1058},
	{1059, 1059},
	{1060, 1060},
	{1061, 1061},
	{1062, 1062},
	{1063, 1063},
	{1064, 1064},
	{1065, 1065},
	{1066, 1066},
	{1067, 1066},
	{1068, 1068},
	{1069, 1069},
	{1070, 1070},
	{1071, 1071},
	{32, 32},
	{1072, 1072},
	{1073, 1073},
	{1074, 1074},
	{1075, 1075},
	{1076, 1076},
	{1077, 1077},
	{1105, 1077},
	{1078, 1078},
	{1079, 1079},
	{1080, 1080},
	{1081, 1081},
	{1082, 1082},
	{1083, 1083},
	{1084, 1084},
	{1085, 1085},
	{1086, 1086},
	{1087, 1087},
	{1088, 1088},
	{1089, 1089},
	{1090, 1090},
	{1091, 1091},
	{1092, 1092},
	{1093, 1093},
	{1094, 1094},
	{1095, 1095},
	{1096, 1096},
	{1097, 1097},
	{1098, 1098},
	{1099, 1098},
	{1100, 1100},
	{1101, 1101},
	{1102, 1102},
	{1103, 1103}
};

const map<unsigned int, wchar_t> eng_lang_encoding = {
	{65, L'A'},
	{66, L'B'},
	{67, L'C'},
	{68, L'D'},
	{69, L'E'},
	{70, L'F'},
	{71, L'G'},
	{72, L'H'},
	{73, L'I'},
	{74, L'J'},
	{75, L'K'},
	{76, L'L'},
	{77, L'M'},
	{78, L'N'},
	{79, L'O'},
	{80, L'P'},
	{81, L'Q'},
	{82, L'R'},
	{83, L'S'},
	{84, L'T'},
	{85, L'U'},
	{86, L'V'},
	{87, L'W'},
	{88, L'X'},
	{89, L'Y'},
	{90, L'Z'},
	{32, L' '},
	{97, L'a'},
	{98, L'b'},
	{99, L'c'},
	{100, L'd'},
	{101, L'e'},
	{102, L'f'},
	{103, L'g'},
	{104, L'h'},
	{105, L'i'},
	{106, L'j'},
	{107, L'k'},
	{108, L'l'},
	{109, L'm'},
	{110, L'n'},
	{111, L'o'},
	{112, L'p'},
	{113, L'q'},
	{114, L'r'},
	{115, L's'},
	{116, L't'},
	{117, L'u'},
	{118, L'v'},
	{119, L'w'},
	{120, L'x'},
	{121, L'y'},
	{122, L'z'}
};
const map<unsigned int, unsigned int> eng_lang_mask = {
	{65, 65},
	{66, 66},
	{67, 67},
	{68, 68},
	{69, 69},
	{70, 70},
	{71, 71},
	{72, 72},
	{73, 73},
	{74, 74},
	{75, 75},
	{76, 76},
	{77, 77},
	{78, 78},
	{79, 79},
	{80, 80},
	{81, 81},
	{82, 82},
	{83, 83},
	{84, 84},
	{85, 85},
	{86, 86},
	{87, 87},
	{88, 88},
	{89, 89},
	{90, 90},
	{32, 32},
	{97, 97},
	{98, 98},
	{99, 99},
	{100, 100},
	{101, 101},
	{102, 102},
	{103, 103},
	{104, 104},
	{105, 105},
	{106, 106},
	{107, 107},
	{108, 108},
	{109, 109},
	{110, 110},
	{111, 111},
	{112, 112},
	{113, 113},
	{114, 114},
	{115, 115},
	{116, 116},
	{117, 117},
	{118, 118},
	{119, 119},
	{120, 120},
	{121, 121},
	{122, 122}
};

char* filename_copy(const char* fname, const char** dir_array, unsigned int dir_len);
int filter_text(char* f_raw_name, char* f_plain_name, int lang,bool ignoreBlanks);
int generate_gramm_rate_file_MAP(char* plain_file_name, char* output_file_name_overlap, char* output_file_name_nooverlap, bool ignoreBlanks, unsigned long int text_analysis_params[5], map<wstring, float>* ensemble_overlap, map<wstring, float>* ensemble_nooverlap);

int sort_map_by_rate(map<wstring, float>* hash_table, vector<map<wstring, float>::iterator>& sorted_arr);
void quickSort(vector<map<wstring, float>::iterator>& iterators_array, unsigned long int left, unsigned long int right);
int output_ngramm_rate_sorted(unsigned long int lang, unsigned long int n, bool ignoreBlanks, map<wstring, float>* hash_table, char* output_f_name);
